-- MySQL Script generated by MySQL Workbench
-- Fri Dec 14 20:43:20 2018
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema DBTeh-kursa_darbs
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema DBTeh-kursa_darbs
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `DBTeh-kursa_darbs` DEFAULT CHARACTER SET utf8 ;
USE `DBTeh-kursa_darbs` ;

-- -----------------------------------------------------
-- Table `DBTeh-kursa_darbs`.`lietotaji`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DBTeh-kursa_darbs`.`lietotaji` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `vards` VARCHAR(255) NULL,
  `uzvards` VARCHAR(255) NULL,
  `epasts` VARCHAR(255) NULL,
  `lietotajvards` VARCHAR(255) NULL,
  `parole` VARCHAR(255) NULL,
  `telefona_numurs` VARCHAR(255) NULL,
  PRIMARY KEY (`ID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DBTeh-kursa_darbs`.`lomas`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DBTeh-kursa_darbs`.`lomas` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `loma` VARCHAR(255) NULL,
  PRIMARY KEY (`ID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DBTeh-kursa_darbs`.`transportlidzekli`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DBTeh-kursa_darbs`.`transportlidzekli` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `kategorija` ENUM('B', 'C', 'D') NULL,
  `marka` VARCHAR(255) NULL,
  `gads` YEAR(4) NULL,
  `krasa` VARCHAR(255) NULL,
  `numura_zime` VARCHAR(255) NULL,
  PRIMARY KEY (`ID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DBTeh-kursa_darbs`.`lietotajiem_ir_transportlidzekli`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DBTeh-kursa_darbs`.`lietotajiem_ir_transportlidzekli` (
  `lietotaji_ID` INT NOT NULL,
  `transportlidzekli_ID` INT NOT NULL,
  INDEX `fk_lietotaji_has_transportlidzekli_transportlidzekli1_idx` (`transportlidzekli_ID` ASC),
  INDEX `fk_lietotaji_has_transportlidzekli_lietotaji1_idx` (`lietotaji_ID` ASC),
  PRIMARY KEY (`transportlidzekli_ID`),
  CONSTRAINT `fk_lietotaji_has_transportlidzekli_lietotaji1`
    FOREIGN KEY (`lietotaji_ID`)
    REFERENCES `DBTeh-kursa_darbs`.`lietotaji` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_lietotaji_has_transportlidzekli_transportlidzekli1`
    FOREIGN KEY (`transportlidzekli_ID`)
    REFERENCES `DBTeh-kursa_darbs`.`transportlidzekli` (`ID`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DBTeh-kursa_darbs`.`marsruti`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DBTeh-kursa_darbs`.`marsruti` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `transportlidzekli_ID` INT NULL DEFAULT NULL,
  `no_valsts` VARCHAR(255) NULL,
  `no_pilseta` VARCHAR(255) NULL,
  `uz_valsts` VARCHAR(255) NULL,
  `uz_pilseta` VARCHAR(255) NULL,
  `no_adrese` VARCHAR(255) NULL,
  `uz_adrese` VARCHAR(255) NULL,
  `izbrauksanas_laiks` DATETIME NULL,
  `cena` DECIMAL(10,2) NULL,
  `sedvietas` INT NULL,
  `irIzpildits` TINYINT NULL,
  PRIMARY KEY (`ID`),
  INDEX `fk_marsruti_transportlidzekli1_idx` (`transportlidzekli_ID` ASC),
  CONSTRAINT `fk_marsruti_transportlidzekli1`
    FOREIGN KEY (`transportlidzekli_ID`)
    REFERENCES `DBTeh-kursa_darbs`.`transportlidzekli` (`ID`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DBTeh-kursa_darbs`.`lietotajiem_ir_marsruti`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DBTeh-kursa_darbs`.`lietotajiem_ir_marsruti` (
  `lietotaji_ID` INT NOT NULL,
  `marsruti_ID` INT NOT NULL,
  `irMarsrutaIzveidotajs` TINYINT NOT NULL DEFAULT 0,
  INDEX `fk_lietotaji_has_marsruti_marsruti1_idx` (`marsruti_ID` ASC),
  INDEX `fk_lietotaji_has_marsruti_lietotaji1_idx` (`lietotaji_ID` ASC),
  CONSTRAINT `fk_lietotaji_has_marsruti_lietotaji1`
    FOREIGN KEY (`lietotaji_ID`)
    REFERENCES `DBTeh-kursa_darbs`.`lietotaji` (`ID`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_lietotaji_has_marsruti_marsruti1`
    FOREIGN KEY (`marsruti_ID`)
    REFERENCES `DBTeh-kursa_darbs`.`marsruti` (`ID`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DBTeh-kursa_darbs`.`lietotajiem_ir_lomas`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DBTeh-kursa_darbs`.`lietotajiem_ir_lomas` (
  `lietotaji_ID` INT NOT NULL,
  `lomas_ID` INT NOT NULL,
  PRIMARY KEY (`lietotaji_ID`, `lomas_ID`),
  INDEX `fk_lietotaji_has_lomas_lomas1_idx` (`lomas_ID` ASC),
  INDEX `fk_lietotaji_has_lomas_lietotaji1_idx` (`lietotaji_ID` ASC),
  CONSTRAINT `fk_lietotaji_has_lomas_lietotaji1`
    FOREIGN KEY (`lietotaji_ID`)
    REFERENCES `DBTeh-kursa_darbs`.`lietotaji` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_lietotaji_has_lomas_lomas1`
    FOREIGN KEY (`lomas_ID`)
    REFERENCES `DBTeh-kursa_darbs`.`lomas` (`ID`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DBTeh-kursa_darbs`.`valstis`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DBTeh-kursa_darbs`.`valstis` (
  `ID` INT NOT NULL,
  `nosaukums` VARCHAR(255) NULL,
  PRIMARY KEY (`ID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DBTeh-kursa_darbs`.`pilsetas`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DBTeh-kursa_darbs`.`pilsetas` (
  `ID` INT NOT NULL,
  `valstis_ID` INT NOT NULL,
  `nosaukums` VARCHAR(255) NULL,
  PRIMARY KEY (`ID`, `valstis_ID`),
  INDEX `fk_pilsetas_valstis1_idx` (`valstis_ID` ASC),
  CONSTRAINT `fk_pilsetas_valstis1`
    FOREIGN KEY (`valstis_ID`)
    REFERENCES `DBTeh-kursa_darbs`.`valstis` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

USE `DBTeh-kursa_darbs` ;

-- -----------------------------------------------------
-- Placeholder table for view `DBTeh-kursa_darbs`.`visi_soferi`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DBTeh-kursa_darbs`.`visi_soferi` (`ID` INT, `vards` INT, `uzvards` INT, `epasts` INT, `lietotajvards` INT, `parole` INT, `telefona_numurs` INT, `lietotaji_ID` INT, `lomas_ID` INT);

-- -----------------------------------------------------
-- Placeholder table for view `DBTeh-kursa_darbs`.`visi_pasazieri`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DBTeh-kursa_darbs`.`visi_pasazieri` (`ID` INT, `vards` INT, `uzvards` INT, `epasts` INT, `lietotajvards` INT, `parole` INT, `telefona_numurs` INT, `lietotaji_ID` INT, `lomas_ID` INT);

-- -----------------------------------------------------
-- Placeholder table for view `DBTeh-kursa_darbs`.`visi_soferu_marsruti`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DBTeh-kursa_darbs`.`visi_soferu_marsruti` (`lietotaji_ID` INT, `marsruti_ID` INT, `irMarsrutaIzveidotajs` INT);

-- -----------------------------------------------------
-- Placeholder table for view `DBTeh-kursa_darbs`.`visi_pasazieru_marsruti`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `DBTeh-kursa_darbs`.`visi_pasazieru_marsruti` (`lietotaji_ID` INT, `marsruti_ID` INT, `irMarsrutaIzveidotajs` INT);

-- -----------------------------------------------------
-- procedure ValstsNosaukumsPecID
-- -----------------------------------------------------

DELIMITER $$
USE `DBTeh-kursa_darbs`$$
CREATE PROCEDURE ValstsNosaukumsPecID(valsts_ID INT)

	BEGIN
	SELECT nosaukums FROM valstis WHERE ID=valsts_ID ;
	END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure PilsetasNosaukumsPecID
-- -----------------------------------------------------

DELIMITER $$
USE `DBTeh-kursa_darbs`$$
CREATE PROCEDURE PilsetasNosaukumsPecID(pilsetas_ID INT)
	BEGIN
	SELECT nosaukums FROM pilsetas WHERE ID=pilsetas_ID ;
	END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure ValstsIDPecNosaukuma
-- -----------------------------------------------------

DELIMITER $$
USE `DBTeh-kursa_darbs`$$
CREATE PROCEDURE ValstsIDPecNosaukuma(valsts_nosaukums INT)
	BEGIN
	SELECT ID FROM valstis WHERE nosaukums=valsts_nosaukums;
	END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure PilsetasIDPecNosaukuma
-- -----------------------------------------------------

DELIMITER $$
USE `DBTeh-kursa_darbs`$$
CREATE PROCEDURE PilsetasIDPecNosaukuma(pilsetas_nosaukums INT)
	BEGIN
	SELECT ID FROM pilsetas WHERE nosaukums=pilsetas_nosaukums;
	END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure visiManiIzveidotieMarsruti
-- -----------------------------------------------------

DELIMITER $$
USE `DBTeh-kursa_darbs`$$
CREATE PROCEDURE visiManiIzveidotieMarsruti(lietotaja_ID INT)
	BEGIN
	SELECT marsruti.ID, no_valsts, no_pilseta, uz_valsts, uz_pilseta, no_adrese, uz_adrese, izbrauksanas_laiks, cena, sedvietas, irIzpildits FROM marsruti
	JOIN lietotajiem_ir_marsruti ON marsruti_ID=ID
	WHERE lietotaji_ID=lietotaja_ID AND irMarsrutaIzveidotajs=1
	ORDER BY irIzpildits, Izbrauksanas_laiks;
	END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure visiManiPieteiktieMarsruti
-- -----------------------------------------------------

DELIMITER $$
USE `DBTeh-kursa_darbs`$$
CREATE PROCEDURE visiManiPieteiktieMarsruti(lietotaja_ID INT)
	BEGIN
	SELECT marsruti.ID, no_valsts, no_pilseta, uz_valsts, uz_pilseta, no_adrese, uz_adrese, izbrauksanas_laiks, cena, sedvietas, irIzpildits FROM marsruti
	JOIN lietotajiem_ir_marsruti ON marsruti_ID=ID
	WHERE lietotaji_ID=lietotaja_ID AND irMarsrutaIzveidotajs=0
	ORDER BY irIzpildits, Izbrauksanas_laiks;
	END$$

DELIMITER ;

-- -----------------------------------------------------
-- function marsrutaNeizveidotajiDalibnieki
-- -----------------------------------------------------

DELIMITER $$
USE `DBTeh-kursa_darbs`$$
CREATE FUNCTION marsrutaNeizveidotajiDalibnieki(marsruta_ID INT)
	RETURNS INT
    BEGIN
    
    DECLARE dalibniekuSkaits INT;
    
    SELECT COUNT(*) FROM lietotajiem_ir_marsruti
	WHERE marsruti_ID=marsruta_ID AND irMarsrutaIzveidotajs=0 INTO dalibniekuSkaits;
    
    RETURN dalibniekuSkaits;
    
    END$$

DELIMITER ;

-- -----------------------------------------------------
-- function pasazieraPieteiktoNeizpilditoMarsrutuSamaksa
-- -----------------------------------------------------

DELIMITER $$
USE `DBTeh-kursa_darbs`$$
CREATE FUNCTION pasazieraPieteiktoNeizpilditoMarsrutuSamaksa(lietotaja_ID INT)
	RETURNS DECIMAL(10,2)
    BEGIN
    
    DECLARE kopsumma DECIMAL(10,2);
    
    SELECT SUM(cena) FROM marsruti
	JOIN lietotajiem_ir_marsruti ON marsruti_ID=ID
	WHERE lietotaji_ID=lietotaja_ID AND irIzpildits=0 AND irMarsrutaIzveidotajs=0 INTO kopsumma;
	
    IF kopsumma > 0 THEN
		RETURN kopsumma;
	ELSE
		RETURN 0;
	END IF;
    
    END$$

DELIMITER ;

-- -----------------------------------------------------
-- function soferaPieteiktoIzpilditoMarsrutuSamaksa
-- -----------------------------------------------------

DELIMITER $$
USE `DBTeh-kursa_darbs`$$
CREATE FUNCTION soferaPieteiktoIzpilditoMarsrutuSamaksa(lietotaja_ID INT)
	RETURNS DECIMAL(10,2)
    BEGIN
    
    DECLARE kopsumma DECIMAL(10,2);
    
    SELECT SUM(cena * sedvietas) FROM marsruti
	JOIN lietotajiem_ir_marsruti ON marsruti_ID=ID
	WHERE lietotaji_ID=lietotaja_ID AND irIzpildits=1 AND irMarsrutaIzveidotajs=0 INTO kopsumma;
	
    IF kopsumma > 0 THEN
		RETURN kopsumma;
	ELSE
		RETURN 0;
	END IF;
    
    END$$

DELIMITER ;

-- -----------------------------------------------------
-- function pasazieraPieteiktoIzpilditoMarsrutuSamaksa
-- -----------------------------------------------------

DELIMITER $$
USE `DBTeh-kursa_darbs`$$
CREATE FUNCTION pasazieraPieteiktoIzpilditoMarsrutuSamaksa(lietotaja_ID INT)
	RETURNS DECIMAL(10,2)
    BEGIN
    
    DECLARE kopsumma DECIMAL(10,2);
    
    SELECT SUM(cena) FROM marsruti
	JOIN lietotajiem_ir_marsruti ON marsruti_ID=ID
	WHERE lietotaji_ID=lietotaja_ID AND irIzpildits=1 AND irMarsrutaIzveidotajs=0 INTO kopsumma;
	
    IF kopsumma > 0 THEN
		RETURN kopsumma;
	ELSE
		RETURN 0;
	END IF;
    
    END$$

DELIMITER ;

-- -----------------------------------------------------
-- function soferaPieteiktoNeizpilditoMarsrutuSamaksa
-- -----------------------------------------------------

DELIMITER $$
USE `DBTeh-kursa_darbs`$$
CREATE FUNCTION soferaPieteiktoNeizpilditoMarsrutuSamaksa(lietotaja_ID INT)
	RETURNS DECIMAL(10,2)
    BEGIN
    
    DECLARE kopsumma DECIMAL(10,2);
    
    SELECT SUM(cena * sedvietas) FROM marsruti
	JOIN lietotajiem_ir_marsruti ON marsruti_ID=ID
	WHERE lietotaji_ID=lietotaja_ID AND irIzpildits=0 AND irMarsrutaIzveidotajs=0 INTO kopsumma;
	
    IF kopsumma > 0 THEN
		RETURN kopsumma;
	ELSE
		RETURN 0;
	END IF;
    
    END$$

DELIMITER ;

-- -----------------------------------------------------
-- function pasazieraIzveidotoNeizpilditoMarsrutuSamaksa
-- -----------------------------------------------------

DELIMITER $$
USE `DBTeh-kursa_darbs`$$
CREATE FUNCTION pasazieraIzveidotoNeizpilditoMarsrutuSamaksa(lietotaja_ID INT)
	RETURNS DECIMAL(10,2)
    BEGIN
    
    DECLARE kopsumma DECIMAL(10,2);
    
    SELECT SUM(cena * sedvietas) FROM marsruti
	JOIN lietotajiem_ir_marsruti ON marsruti_ID=ID
	WHERE lietotaji_ID=lietotaja_ID AND irMarsrutaIzveidotajs=1 AND irIzpildits=0 INTO kopsumma;
	
    IF kopsumma > 0 THEN
		RETURN kopsumma;
	ELSE
		RETURN 0;
	END IF;
    
    END$$

DELIMITER ;

-- -----------------------------------------------------
-- function pasazieraIzveidotoIzpilditoMarsrutuSamaksa
-- -----------------------------------------------------

DELIMITER $$
USE `DBTeh-kursa_darbs`$$
CREATE FUNCTION pasazieraIzveidotoIzpilditoMarsrutuSamaksa(lietotaja_ID INT)
	RETURNS DECIMAL(10,2)
    BEGIN
    
    DECLARE kopsumma DECIMAL(10,2);
    
    SELECT SUM(cena * sedvietas) FROM marsruti
	JOIN lietotajiem_ir_marsruti ON marsruti_ID=ID
	WHERE lietotaji_ID=lietotaja_ID AND irMarsrutaIzveidotajs=1 AND irIzpildits=1 INTO kopsumma;
    
    IF kopsumma > 0 THEN
		RETURN kopsumma;
	ELSE
		RETURN 0;
	END IF;
    
    END$$

DELIMITER ;

-- -----------------------------------------------------
-- function soferaIzveidotoNeizpilditoMarsrutuSamaksa
-- -----------------------------------------------------

DELIMITER $$
USE `DBTeh-kursa_darbs`$$
CREATE FUNCTION soferaIzveidotoNeizpilditoMarsrutuSamaksa(lietotaja_ID INT)
	RETURNS DECIMAL(10,2)
    BEGIN
    
    DECLARE kopsumma DECIMAL(10,2);
    
    SELECT SUM(cena * sedvietas) FROM marsruti
	JOIN lietotajiem_ir_marsruti ON marsruti_ID=ID
	WHERE lietotaji_ID=lietotaja_ID AND irMarsrutaIzveidotajs=1 AND irIzpildits=0 INTO kopsumma;
	
    IF kopsumma > 0 THEN
		RETURN kopsumma;
	ELSE
		RETURN 0;
	END IF;
    
    END$$

DELIMITER ;

-- -----------------------------------------------------
-- function soferaIzveidotoIzpilditoMarsrutuSamaksa
-- -----------------------------------------------------

DELIMITER $$
USE `DBTeh-kursa_darbs`$$
CREATE FUNCTION soferaIzveidotoIzpilditoMarsrutuSamaksa(lietotaja_ID INT)
	RETURNS DECIMAL(10,2)
    BEGIN
    
    DECLARE kopsumma DECIMAL(10,2);
    
    
    SELECT SUM(cena * marsrutaNeizveidotajiDalibnieki(ID)) FROM marsruti
	JOIN lietotajiem_ir_marsruti ON marsruti_ID=ID
	WHERE lietotaji_ID=lietotaja_ID AND irMarsrutaIzveidotajs=1 AND irIzpildits=1 INTO kopsumma;
    
    IF kopsumma > 0 THEN
		RETURN kopsumma;
	ELSE
		RETURN 0;
	END IF;
    
    END$$

DELIMITER ;

-- -----------------------------------------------------
-- View `DBTeh-kursa_darbs`.`visi_soferi`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `DBTeh-kursa_darbs`.`visi_soferi`;
USE `DBTeh-kursa_darbs`;
CREATE  OR REPLACE VIEW `visi_soferi` AS
SELECT * FROM `lietotaji` 
JOIN `lietotajiem_ir_lomas` ON ID=lietotaji_ID WHERE lomas_ID=2;

-- -----------------------------------------------------
-- View `DBTeh-kursa_darbs`.`visi_pasazieri`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `DBTeh-kursa_darbs`.`visi_pasazieri`;
USE `DBTeh-kursa_darbs`;
CREATE  OR REPLACE VIEW `visi_pasazieri` AS
SELECT * FROM `lietotaji` 
JOIN `lietotajiem_ir_lomas` ON ID=lietotaji_ID WHERE lomas_ID=1;

-- -----------------------------------------------------
-- View `DBTeh-kursa_darbs`.`visi_soferu_marsruti`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `DBTeh-kursa_darbs`.`visi_soferu_marsruti`;
USE `DBTeh-kursa_darbs`;
CREATE  OR REPLACE VIEW `visi_soferu_marsruti` AS
SELECT * FROM lietotajiem_ir_marsruti WHERE irMarsrutaIzveidotajs=1 AND lietotaji_ID IN (SELECT lietotaji_ID FROM visi_soferi ORDER BY lietotaji_ID DESC);

-- -----------------------------------------------------
-- View `DBTeh-kursa_darbs`.`visi_pasazieru_marsruti`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `DBTeh-kursa_darbs`.`visi_pasazieru_marsruti`;
USE `DBTeh-kursa_darbs`;
CREATE  OR REPLACE VIEW `visi_pasazieru_marsruti` AS
SELECT * FROM lietotajiem_ir_marsruti WHERE irMarsrutaIzveidotajs=1 AND lietotaji_ID IN (SELECT lietotaji_ID FROM visi_pasazieri ORDER BY lietotaji_ID DESC);
USE `DBTeh-kursa_darbs`;

DELIMITER $$
USE `DBTeh-kursa_darbs`$$
CREATE DEFINER = CURRENT_USER TRIGGER `DBTeh-kursa_darbs`.`transportlidzekli_BEFORE_UPDATE` BEFORE UPDATE ON `transportlidzekli` FOR EACH ROW
BEGIN
	IF NEW.gads < 1901 THEN
		SIGNAL SQLSTATE '45001' SET MESSAGE_TEXT = "Transportlīdzekļa gads nedrīkst būt mazāks par 1901";
	END IF;
    
    IF NEW.gads > NOW() THEN
		SIGNAL SQLSTATE '45001' SET MESSAGE_TEXT = "Transportlīdzekļa gads nedrīkst būt lielāks par tagadējo laiku";
	END IF;
END$$

USE `DBTeh-kursa_darbs`$$
CREATE DEFINER = CURRENT_USER TRIGGER `DBTeh-kursa_darbs`.`marsruti_BEFORE_INSERT` BEFORE INSERT ON `marsruti` FOR EACH ROW
BEGIN
	IF NEW.izbrauksanas_laiks < NOW() THEN
		SIGNAL SQLSTATE '45001' SET MESSAGE_TEXT = "Datums nedrīkst būt vecāks par šodienas datumu";
	END IF;
    
	IF NEW.cena < 0 THEN
		SIGNAL SQLSTATE '45001' SET MESSAGE_TEXT = "Cena nedrīkst būt mazāka par 0";
	END IF;
END$$


DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- -----------------------------------------------------
-- Data for table `DBTeh-kursa_darbs`.`lietotaji`
-- -----------------------------------------------------
START TRANSACTION;
USE `DBTeh-kursa_darbs`;
INSERT INTO `DBTeh-kursa_darbs`.`lietotaji` (`ID`, `vards`, `uzvards`, `epasts`, `lietotajvards`, `parole`, `telefona_numurs`) VALUES (1, 'Ieva ', 'Ūdrēna', 'skenna0@usa.gov', 'dmartinot0', '1111a3628d7dc3e15d7e5961e83022cf', '703-810-3816');
INSERT INTO `DBTeh-kursa_darbs`.`lietotaji` (`ID`, `vards`, `uzvards`, `epasts`, `lietotajvards`, `parole`, `telefona_numurs`) VALUES (2, 'Zigurds ', 'Zeimans', 'vverty1@phpbb.com', 'gdomek1', '0cc175b9c0f1b6a831c399e269772661', '956-958-6117');
INSERT INTO `DBTeh-kursa_darbs`.`lietotaji` (`ID`, `vards`, `uzvards`, `epasts`, `lietotajvards`, `parole`, `telefona_numurs`) VALUES (3, 'Inita ', 'Vellaine', 'rjeeves2@ibm.com', 'bwoodburn2', '92eb5ffee6ae2fec3ad71c777531578f', '616-298-0151');
INSERT INTO `DBTeh-kursa_darbs`.`lietotaji` (`ID`, `vards`, `uzvards`, `epasts`, `lietotajvards`, `parole`, `telefona_numurs`) VALUES (4, 'Ādams ', 'Buiķis', 'krainton3@sbwire.com', 'fpither3', '4a8a08f09d37b73795649038408b5f33', '427-870-5425');
INSERT INTO `DBTeh-kursa_darbs`.`lietotaji` (`ID`, `vards`, `uzvards`, `epasts`, `lietotajvards`, `parole`, `telefona_numurs`) VALUES (5, 'Inga', 'Lobaņova', 'aawmack4@infoseek.co.jp', 'aklemensiewicz4', '8277e0910d750195b448797616e091ad', '301-770-3091');
INSERT INTO `DBTeh-kursa_darbs`.`lietotaji` (`ID`, `vards`, `uzvards`, `epasts`, `lietotajvards`, `parole`, `telefona_numurs`) VALUES (6, 'Tālrīts ', 'Brahmanis', 'afarbrother5@nationalgeographic.com', 'kwynett5', 'e1671797c52e15f763380b45e841ec32', '158-893-1818');
INSERT INTO `DBTeh-kursa_darbs`.`lietotaji` (`ID`, `vards`, `uzvards`, `epasts`, `lietotajvards`, `parole`, `telefona_numurs`) VALUES (7, 'Spulga ', 'Aldare', 'rwollrauch6@nyu.edu', 'jhanhart6', '8fa14cdd754f91cc6554c9e71929cce7', '580-278-1680');
INSERT INTO `DBTeh-kursa_darbs`.`lietotaji` (`ID`, `vards`, `uzvards`, `epasts`, `lietotajvards`, `parole`, `telefona_numurs`) VALUES (8, 'Konrāds ', 'Miķelsons', 'edownes7@yolasite.com', 'fgianinotti7', 'b2f5ff47436671b6e533d8dc3614845d', '981-173-3183');
INSERT INTO `DBTeh-kursa_darbs`.`lietotaji` (`ID`, `vards`, `uzvards`, `epasts`, `lietotajvards`, `parole`, `telefona_numurs`) VALUES (9, 'Vladislava ', 'Prole', 'adavinet8@fc2.com', 'atipling8', '2510c39011c5be704182423e3a695e91', '251-555-3305');
INSERT INTO `DBTeh-kursa_darbs`.`lietotaji` (`ID`, `vards`, `uzvards`, `epasts`, `lietotajvards`, `parole`, `telefona_numurs`) VALUES (10, 'Ginters ', 'Liekniņš', 'sscamal9@networksolutions.com', 'mhackinge9', '865c0c0b4ab0e063e5caa3387c1a8741', '855-926-7897');

COMMIT;


-- -----------------------------------------------------
-- Data for table `DBTeh-kursa_darbs`.`lomas`
-- -----------------------------------------------------
START TRANSACTION;
USE `DBTeh-kursa_darbs`;
INSERT INTO `DBTeh-kursa_darbs`.`lomas` (`ID`, `loma`) VALUES (3, 'administrators');
INSERT INTO `DBTeh-kursa_darbs`.`lomas` (`ID`, `loma`) VALUES (2, 'soferis');
INSERT INTO `DBTeh-kursa_darbs`.`lomas` (`ID`, `loma`) VALUES (1, 'pasazieris');

COMMIT;


-- -----------------------------------------------------
-- Data for table `DBTeh-kursa_darbs`.`transportlidzekli`
-- -----------------------------------------------------
START TRANSACTION;
USE `DBTeh-kursa_darbs`;
INSERT INTO `DBTeh-kursa_darbs`.`transportlidzekli` (`ID`, `kategorija`, `marka`, `gads`, `krasa`, `numura_zime`) VALUES (1, 'B', 'Opel', 1995, 'Sarkana', 'AA-1000');
INSERT INTO `DBTeh-kursa_darbs`.`transportlidzekli` (`ID`, `kategorija`, `marka`, `gads`, `krasa`, `numura_zime`) VALUES (2, 'B', 'Cadillac', 2009, 'Zila', 'BB-2000');
INSERT INTO `DBTeh-kursa_darbs`.`transportlidzekli` (`ID`, `kategorija`, `marka`, `gads`, `krasa`, `numura_zime`) VALUES (3, 'B', 'Audi', 2001, 'Zaļa', 'CC-3000');
INSERT INTO `DBTeh-kursa_darbs`.`transportlidzekli` (`ID`, `kategorija`, `marka`, `gads`, `krasa`, `numura_zime`) VALUES (4, 'C', 'Audi', 2002, 'Sarkana', 'DD-4000');
INSERT INTO `DBTeh-kursa_darbs`.`transportlidzekli` (`ID`, `kategorija`, `marka`, `gads`, `krasa`, `numura_zime`) VALUES (5, 'C', 'Opel', 2005, 'Melna', 'EE-5000');
INSERT INTO `DBTeh-kursa_darbs`.`transportlidzekli` (`ID`, `kategorija`, `marka`, `gads`, `krasa`, `numura_zime`) VALUES (6, 'B', 'BMW', 2009, 'Melna', 'FF-6000');

COMMIT;


-- -----------------------------------------------------
-- Data for table `DBTeh-kursa_darbs`.`lietotajiem_ir_transportlidzekli`
-- -----------------------------------------------------
START TRANSACTION;
USE `DBTeh-kursa_darbs`;
INSERT INTO `DBTeh-kursa_darbs`.`lietotajiem_ir_transportlidzekli` (`lietotaji_ID`, `transportlidzekli_ID`) VALUES (1, 1);
INSERT INTO `DBTeh-kursa_darbs`.`lietotajiem_ir_transportlidzekli` (`lietotaji_ID`, `transportlidzekli_ID`) VALUES (1, 2);
INSERT INTO `DBTeh-kursa_darbs`.`lietotajiem_ir_transportlidzekli` (`lietotaji_ID`, `transportlidzekli_ID`) VALUES (2, 3);
INSERT INTO `DBTeh-kursa_darbs`.`lietotajiem_ir_transportlidzekli` (`lietotaji_ID`, `transportlidzekli_ID`) VALUES (3, 4);
INSERT INTO `DBTeh-kursa_darbs`.`lietotajiem_ir_transportlidzekli` (`lietotaji_ID`, `transportlidzekli_ID`) VALUES (4, 5);
INSERT INTO `DBTeh-kursa_darbs`.`lietotajiem_ir_transportlidzekli` (`lietotaji_ID`, `transportlidzekli_ID`) VALUES (5, 6);

COMMIT;


-- -----------------------------------------------------
-- Data for table `DBTeh-kursa_darbs`.`marsruti`
-- -----------------------------------------------------
START TRANSACTION;
USE `DBTeh-kursa_darbs`;
INSERT INTO `DBTeh-kursa_darbs`.`marsruti` (`ID`, `transportlidzekli_ID`, `no_valsts`, `no_pilseta`, `uz_valsts`, `uz_pilseta`, `no_adrese`, `uz_adrese`, `izbrauksanas_laiks`, `cena`, `sedvietas`, `irIzpildits`) VALUES (1, 1, 'Latvia', 'Liepaja', 'Latvia', 'Riga', 'Tirgus iela 19', 'Brīvības iela 8', '2018-12-16 17:00:00', 6.99, 2, 1);
INSERT INTO `DBTeh-kursa_darbs`.`marsruti` (`ID`, `transportlidzekli_ID`, `no_valsts`, `no_pilseta`, `uz_valsts`, `uz_pilseta`, `no_adrese`, `uz_adrese`, `izbrauksanas_laiks`, `cena`, `sedvietas`, `irIzpildits`) VALUES (2, 1, 'Latvia', 'Riga', 'Latvia', 'Liepaja', 'Brīvības iela 8', 'Tirgus iela 19', '2018-12-18 17:00:00', 6.99, 2, 0);
INSERT INTO `DBTeh-kursa_darbs`.`marsruti` (`ID`, `transportlidzekli_ID`, `no_valsts`, `no_pilseta`, `uz_valsts`, `uz_pilseta`, `no_adrese`, `uz_adrese`, `izbrauksanas_laiks`, `cena`, `sedvietas`, `irIzpildits`) VALUES (3, NULL, 'Lithuania', 'Tallinn', 'Lithuania', 'Tartu', NULL, NULL, '2018-12-22 12:00:00', 15, 1, 0);
INSERT INTO `DBTeh-kursa_darbs`.`marsruti` (`ID`, `transportlidzekli_ID`, `no_valsts`, `no_pilseta`, `uz_valsts`, `uz_pilseta`, `no_adrese`, `uz_adrese`, `izbrauksanas_laiks`, `cena`, `sedvietas`, `irIzpildits`) VALUES (4, 3, 'Russia', 'Moscow', 'Latvia', 'Riga', 'Gazetny Ln., 17/9/1', 'Brīvības iela 8', '2018-12-25 6:00:00', 45.99, 3, 0);
INSERT INTO `DBTeh-kursa_darbs`.`marsruti` (`ID`, `transportlidzekli_ID`, `no_valsts`, `no_pilseta`, `uz_valsts`, `uz_pilseta`, `no_adrese`, `uz_adrese`, `izbrauksanas_laiks`, `cena`, `sedvietas`, `irIzpildits`) VALUES (5, NULL, 'Poland', 'Kraków', 'Poland', 'Warsaw', NULL, NULL, '2019-1-15 7:00:00', 3.99, 1, 0);

COMMIT;


-- -----------------------------------------------------
-- Data for table `DBTeh-kursa_darbs`.`lietotajiem_ir_marsruti`
-- -----------------------------------------------------
START TRANSACTION;
USE `DBTeh-kursa_darbs`;
INSERT INTO `DBTeh-kursa_darbs`.`lietotajiem_ir_marsruti` (`lietotaji_ID`, `marsruti_ID`, `irMarsrutaIzveidotajs`) VALUES (1, 1, 1);
INSERT INTO `DBTeh-kursa_darbs`.`lietotajiem_ir_marsruti` (`lietotaji_ID`, `marsruti_ID`, `irMarsrutaIzveidotajs`) VALUES (1, 2, 1);
INSERT INTO `DBTeh-kursa_darbs`.`lietotajiem_ir_marsruti` (`lietotaji_ID`, `marsruti_ID`, `irMarsrutaIzveidotajs`) VALUES (3, 4, 1);
INSERT INTO `DBTeh-kursa_darbs`.`lietotajiem_ir_marsruti` (`lietotaji_ID`, `marsruti_ID`, `irMarsrutaIzveidotajs`) VALUES (4, 3, 0);
INSERT INTO `DBTeh-kursa_darbs`.`lietotajiem_ir_marsruti` (`lietotaji_ID`, `marsruti_ID`, `irMarsrutaIzveidotajs`) VALUES (6, 3, 1);
INSERT INTO `DBTeh-kursa_darbs`.`lietotajiem_ir_marsruti` (`lietotaji_ID`, `marsruti_ID`, `irMarsrutaIzveidotajs`) VALUES (7, 5, 1);
INSERT INTO `DBTeh-kursa_darbs`.`lietotajiem_ir_marsruti` (`lietotaji_ID`, `marsruti_ID`, `irMarsrutaIzveidotajs`) VALUES (8, 1, 0);
INSERT INTO `DBTeh-kursa_darbs`.`lietotajiem_ir_marsruti` (`lietotaji_ID`, `marsruti_ID`, `irMarsrutaIzveidotajs`) VALUES (9, 1, 0);

COMMIT;


-- -----------------------------------------------------
-- Data for table `DBTeh-kursa_darbs`.`lietotajiem_ir_lomas`
-- -----------------------------------------------------
START TRANSACTION;
USE `DBTeh-kursa_darbs`;
INSERT INTO `DBTeh-kursa_darbs`.`lietotajiem_ir_lomas` (`lietotaji_ID`, `lomas_ID`) VALUES (1, 2);
INSERT INTO `DBTeh-kursa_darbs`.`lietotajiem_ir_lomas` (`lietotaji_ID`, `lomas_ID`) VALUES (2, 2);
INSERT INTO `DBTeh-kursa_darbs`.`lietotajiem_ir_lomas` (`lietotaji_ID`, `lomas_ID`) VALUES (3, 2);
INSERT INTO `DBTeh-kursa_darbs`.`lietotajiem_ir_lomas` (`lietotaji_ID`, `lomas_ID`) VALUES (4, 2);
INSERT INTO `DBTeh-kursa_darbs`.`lietotajiem_ir_lomas` (`lietotaji_ID`, `lomas_ID`) VALUES (5, 2);
INSERT INTO `DBTeh-kursa_darbs`.`lietotajiem_ir_lomas` (`lietotaji_ID`, `lomas_ID`) VALUES (6, 1);
INSERT INTO `DBTeh-kursa_darbs`.`lietotajiem_ir_lomas` (`lietotaji_ID`, `lomas_ID`) VALUES (7, 1);
INSERT INTO `DBTeh-kursa_darbs`.`lietotajiem_ir_lomas` (`lietotaji_ID`, `lomas_ID`) VALUES (8, 1);
INSERT INTO `DBTeh-kursa_darbs`.`lietotajiem_ir_lomas` (`lietotaji_ID`, `lomas_ID`) VALUES (9, 1);
INSERT INTO `DBTeh-kursa_darbs`.`lietotajiem_ir_lomas` (`lietotaji_ID`, `lomas_ID`) VALUES (10, 1);

COMMIT;


-- -----------------------------------------------------
-- Data for table `DBTeh-kursa_darbs`.`valstis`
-- -----------------------------------------------------
START TRANSACTION;
USE `DBTeh-kursa_darbs`;
INSERT INTO `DBTeh-kursa_darbs`.`valstis` (`ID`, `nosaukums`) VALUES (1, 'Estonia');
INSERT INTO `DBTeh-kursa_darbs`.`valstis` (`ID`, `nosaukums`) VALUES (2, 'Latvia');
INSERT INTO `DBTeh-kursa_darbs`.`valstis` (`ID`, `nosaukums`) VALUES (3, 'Lithuania');
INSERT INTO `DBTeh-kursa_darbs`.`valstis` (`ID`, `nosaukums`) VALUES (4, 'Russia');
INSERT INTO `DBTeh-kursa_darbs`.`valstis` (`ID`, `nosaukums`) VALUES (5, 'Poland');

COMMIT;


-- -----------------------------------------------------
-- Data for table `DBTeh-kursa_darbs`.`pilsetas`
-- -----------------------------------------------------
START TRANSACTION;
USE `DBTeh-kursa_darbs`;
INSERT INTO `DBTeh-kursa_darbs`.`pilsetas` (`ID`, `valstis_ID`, `nosaukums`) VALUES (1, 1, 'Tallinn');
INSERT INTO `DBTeh-kursa_darbs`.`pilsetas` (`ID`, `valstis_ID`, `nosaukums`) VALUES (2, 1, 'Tartu');
INSERT INTO `DBTeh-kursa_darbs`.`pilsetas` (`ID`, `valstis_ID`, `nosaukums`) VALUES (3, 2, 'Ventspils');
INSERT INTO `DBTeh-kursa_darbs`.`pilsetas` (`ID`, `valstis_ID`, `nosaukums`) VALUES (4, 2, 'Riga');
INSERT INTO `DBTeh-kursa_darbs`.`pilsetas` (`ID`, `valstis_ID`, `nosaukums`) VALUES (5, 2, 'Liepaja');
INSERT INTO `DBTeh-kursa_darbs`.`pilsetas` (`ID`, `valstis_ID`, `nosaukums`) VALUES (6, 3, 'Vilnius');
INSERT INTO `DBTeh-kursa_darbs`.`pilsetas` (`ID`, `valstis_ID`, `nosaukums`) VALUES (7, 3, 'Kaunas');
INSERT INTO `DBTeh-kursa_darbs`.`pilsetas` (`ID`, `valstis_ID`, `nosaukums`) VALUES (8, 4, 'Moscow');
INSERT INTO `DBTeh-kursa_darbs`.`pilsetas` (`ID`, `valstis_ID`, `nosaukums`) VALUES (9, 4, 'Saint Petersburg');
INSERT INTO `DBTeh-kursa_darbs`.`pilsetas` (`ID`, `valstis_ID`, `nosaukums`) VALUES (10, 4, 'Novosibirsk');
INSERT INTO `DBTeh-kursa_darbs`.`pilsetas` (`ID`, `valstis_ID`, `nosaukums`) VALUES (11, 5, 'Warsaw');
INSERT INTO `DBTeh-kursa_darbs`.`pilsetas` (`ID`, `valstis_ID`, `nosaukums`) VALUES (12, 5, 'Kraków');
INSERT INTO `DBTeh-kursa_darbs`.`pilsetas` (`ID`, `valstis_ID`, `nosaukums`) VALUES (13, 5, 'Łódź');

COMMIT;

